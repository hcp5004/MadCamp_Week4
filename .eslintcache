[{"/home/ubuntu/MadCamp_Week4/src/index.js":"1","/home/ubuntu/MadCamp_Week4/src/App.js":"2","/home/ubuntu/MadCamp_Week4/src/reportWebVitals.js":"3","/home/ubuntu/MadCamp_Week4/src/Main.js":"4","/home/ubuntu/MadCamp_Week4/src/Sarang.js":"5","/home/ubuntu/MadCamp_Week4/src/Login.js":"6","/home/ubuntu/MadCamp_Week4/src/User.js":"7","/home/ubuntu/MadCamp_Week4/src/Join.js":"8","/home/ubuntu/MadCamp_Week4/src/FreeWrite.js":"9","/home/ubuntu/MadCamp_Week4/src/FreeOne.js":"10","/home/ubuntu/MadCamp_Week4/src/Free.js":"11","/home/ubuntu/MadCamp_Week4/src/Co_buying/Co_buying.js":"12","/home/ubuntu/MadCamp_Week4/src/Co_buying/EachBuying.js":"13","/home/ubuntu/MadCamp_Week4/src/Jillimain.js":"14","/home/ubuntu/MadCamp_Week4/src/Jilli.js":"15","/home/ubuntu/MadCamp_Week4/src/JilliBoard.js":"16","/home/ubuntu/MadCamp_Week4/src/Jillimenu.js":"17","/home/ubuntu/MadCamp_Week4/src/BoardFloor.js":"18"},{"size":602,"mtime":1611670626693,"results":"19","hashOfConfig":"20"},{"size":2324,"mtime":1611769809213,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1611330722949,"results":"22","hashOfConfig":"20"},{"size":3981,"mtime":1611769773610,"results":"23","hashOfConfig":"20"},{"size":244,"mtime":1611670607193,"results":"24","hashOfConfig":"20"},{"size":2586,"mtime":1611824888583,"results":"25","hashOfConfig":"20"},{"size":1821,"mtime":1611824888583,"results":"26","hashOfConfig":"20"},{"size":2911,"mtime":1611769773610,"results":"27","hashOfConfig":"20"},{"size":4185,"mtime":1611824888583,"results":"28","hashOfConfig":"20"},{"size":10136,"mtime":1611824888583,"results":"29","hashOfConfig":"20"},{"size":3945,"mtime":1611824888583,"results":"30","hashOfConfig":"20"},{"size":5012,"mtime":1611769760974,"results":"31","hashOfConfig":"20"},{"size":2137,"mtime":1611769760974,"results":"32","hashOfConfig":"20"},{"size":2184,"mtime":1611824888587,"results":"33","hashOfConfig":"20"},{"size":3874,"mtime":1611824863436,"results":"34","hashOfConfig":"20"},{"size":8537,"mtime":1611824863436,"results":"35","hashOfConfig":"20"},{"size":2832,"mtime":1611824888583,"results":"36","hashOfConfig":"20"},{"size":2839,"mtime":1611824863432,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"177pau8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ubuntu/MadCamp_Week4/src/index.js",[],["89","90"],"/home/ubuntu/MadCamp_Week4/src/App.js",["91","92","93","94","95","96","97","98"],"import Co_buying from './Co_buying/Co_buying'\nimport EachBuying from './Co_buying/EachBuying'\nimport Jilli from './Jilli'\nimport React from 'react';\nimport './style/App.css';\nimport Main from './Main';\nimport Sarang from './Sarang';\nimport Free from './Free';\nimport FreeWrite from './FreeWrite';\nimport FreeOne from './FreeOne';\nimport Login from './Login';\nimport Join from './Join';\nimport Jillimain from './Jillimain';\nimport User from './User';\nimport { withCookies, useCookies } from 'react-cookie';\nimport {useState, useEffect} from 'react';\nimport JilliBoard from './JilliBoard';\nimport { Link, Route, BrowserRouter as Router , Redirect, Switch, withRouter} from 'react-router-dom';\n\nfunction App(props) {\n\n  const [ cookies, removeCookie ] = useCookies(['user']);\n  const [ hasCookie, setHasCookie ] = useState(false);\n\n  useEffect(() => {\n    if (cookies.user && cookies.user !== 'undefined') {\n    setHasCookie(true);\n    }\n  }, [ cookies ]);\n\n  return (\n    <Router>\n      <Route exact path = '/User'><User {...props} removeCookie = {() => {removeCookie('user'); setHasCookie(false);}} ></User></Route>\n      <Route exact path='/Co_buying'><Co_buying/></Route>\n      <Route path='/Co_buying/:id'><EachBuying/></Route>\n      <Route exact path='/Somang'><Jilli/></Route>\n      <Route exact path = '/'><Main cookies = {cookies} hasCookie = {hasCookie} setHasCookie = {setHasCookie} removeCookie = {() => {removeCookie('user'); setHasCookie(false);}}/></Route>\n      <Route path='/Sarang'><Sarang/></Route>\n      {/* <Route exact path = '/Jilli'><Free/></Route>\n      <Route exact path = '/Jilli/freeboardwrite'>{hasCookie?(<FreeWrite></FreeWrite>):(<Redirect to ={{pathname : \"/Login\"}}/>)}</Route>\n      <Route exact path = '/Jilli/freeboardwrite/:freeid'><FreeOne></FreeOne></Route> */}\n      {/* <Route exact path = '/Jilli'><Jillimain hasCookie = {hasCookie}/></Route> */}\n      <Jillimain cookies = {cookies} hasCookie = {hasCookie} setHasCookie = {setHasCookie} removeCookie = {() => {removeCookie('user'); setHasCookie(false);}}/>\n      <Route exact path = '/Login'><Login setHasCookie = {setHasCookie}></Login></Route>\n      <Route exact path = '/Join'><Join></Join></Route>\n      <Route exact path='/Jilli/board/:roomNum'><Jilli/><JilliBoard/></Route>\n    </Router>\n  )\n}\n\nexport default withCookies(App);\n","/home/ubuntu/MadCamp_Week4/src/reportWebVitals.js",[],"/home/ubuntu/MadCamp_Week4/src/Main.js",["99","100","101"],"import React from 'react';\nimport './style/btnStyle.css';\nimport { Link, Route, BrowserRouter as Router} from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/icons/Person';\nimport {useEffect} from 'react';\n\nfunction Main(props){\n    useEffect(() => {\n        if (props.cookies.user && props.cookies.user !== 'undefined') {\n        props.setHasCookie(true);\n        }\n      }, [ props.cookies ]);\n\n    return(\n        <>\n        <nav style = {{height: \"80px\"}}>\n            <div class = \"account-wrap\">\n                {!props.hasCookie && (\n                <div class = \"account\">\n                    <Link to = '/Login'>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<Icon />}    \n                        ><h3 style ={{fontSize: \"17px\", marginTop : \"0px\"}}>Login</h3>\n                        </Button>\n                    </Link>    \n                </div>\n                )}\n                {props.hasCookie && (\n                <div class = \"account\" >\n                    <Link to = '/User'>\n                        <Button\n                            className = \"my\" \n                            variant=\"outlined\"\n                            color=\"primary\"\n                            style ={{width: \"33px\"}}\n                            startIcon={<Icon style ={{marginLeft: \"-4.5px\"}}></Icon>} \n                        ></Button> \n                    </Link>\n                        <Button \n                            onClick = {props.removeCookie}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        ><h3 style ={{fontSize: \"17px\"}}>Logout</h3></Button>  \n                </div>\n                )}\n            </div>\n        </nav>\n        <div className=\"btn\">\n            <ul style={{listStyleType: 'none'}}>\n                <table>\n                    <tr>\n                    <h1>KAIST Dormitory Community</h1>\n                    </tr><tr>\n                        <li style={{float: 'left'}}><Link to='/Co_buying'   style={{textDecoration: 'none' }} ><div>사랑</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Somang'   style={{textDecoration: 'none' }} ><div>소망</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Areum'    style={{textDecoration: 'none' }} ><div>아름</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Seongsil' style={{textDecoration: 'none' }} ><div>성실</div></Link></li>\n                    </tr><tr>\n                        <li style={{float: 'left'}}><Link to='/Jilli/board'    style={{textDecoration: 'none' }} ><div>진리</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Silloe'   style={{textDecoration: 'none' }} ><div>신뢰</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Jihey'    style={{textDecoration: 'none' }} ><div>지혜</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Sejong'   style={{textDecoration: 'none' }} ><div>세종</div></Link></li>\n                    </tr><tr>\n                        <li style={{float: 'left'}}><Link to='/Dasom'    style={{textDecoration: 'none' }} ><div>다솜</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Heemang'  style={{textDecoration: 'none' }} ><div>희망</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Mir'      style={{textDecoration: 'none' }} ><div>미르</div></Link></li>\n                        <li style={{float: 'left'}}><Link to='/Narae'    style={{textDecoration: 'none' }} ><div>나래</div></Link></li>\n                    </tr>\n                </table>\n            </ul>\n        </div>\n        </>\n    );\n}\n\n\nexport default Main;","/home/ubuntu/MadCamp_Week4/src/Sarang.js",[],"/home/ubuntu/MadCamp_Week4/src/Login.js",["102","103","104","105"],"import React from 'react';\nimport { Link, Route, BrowserRouter as Router} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport './style/Login.css'\nimport Button from '@material-ui/core/Button'\nimport 'semantic-ui-css/semantic.min.css';\n\nfunction Login({setHasCookie}){\n    \n    const [ userId, setUserId ] = useState('');\n    const [ userPw, setUserPw ] = useState('');\n\n    const loginApi = (user) => {\n        return Axios.post('http://localhost:3002/api/users/login',\n            user, {withCredentials: true} ).then((response) => response.data);\n        \n    }\n\n    const handleSubmit = async(e) => {\n        e.preventDefault();\n\n        if(!userId || !userPw){\n            return;\n        }\n\n        try{\n            const response = await loginApi({\n                user_id: userId,\n                user_pw: userPw\n            });\n\n            if(response.result == 'ok'){\n                //\n                setHasCookie(true)\n                document.location.href = \"/\"\n                console.log(response.token)\n            } else {\n                throw new Error(response.error);\n            }\n        }catch(err){\n            alert('로그인 실패');\n            setUserId('');\n            setUserPw('');\n            console.error('login error', err);\n        }\n\n    }\n\n    return(\n        <div class = \"container\">\n        <form onSubmit = {handleSubmit}>\n            <p class = \"input\">\n                <input\n                    class = \"text\"\n                    type=\"text\"\n                    placeholder=\"아이디\"\n                    value = {userId} // 적혀있는 값을 변경....\n                    onChange = {e => setUserId(e.target.value)}\n                />\n            </p>\n            <p class = \"input\">\n                <input\n                    class = \"text\"\n                    type=\"password\"\n                    placeholder=\"비밀번호\"\n                    value = {userPw} // 적혀있는 값을 변경....\n                    onChange = {e => setUserPw(e.target.value)}\n                />\n            </p>\n            <Button \n                type = \"submit\"\n                // class = \"submitbutton\"\n                variant=\"outlined\"\n                color=\"primary\"\n                style = {{width : \"100%\", fontSize: \"16px\"}}\n                \n            >로그인</Button>\n            <p class = \"register\">\n                <Link to=\"/Join\">\n                회원가입\n                </Link>\n            </p>\n            </form>\n        </div>   \n    \n    )\n}\n\nexport default Login;","/home/ubuntu/MadCamp_Week4/src/User.js",["106","107","108","109","110","111","112","113","114"],"import React from 'react';\nimport Axios from 'axios';\nimport { withCookies, useCookies } from 'react-cookie';\nimport {useState, useEffect} from 'react';\nimport { Link, Route, BrowserRouter as Router , Redirect, Switch, withRouter} from 'react-router-dom'\nimport './style/User.css'\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/icons/Person';\n\nfunction User(props) {\n\n    const [my, setMy] = useState({\n        user_id : '',\n        user_name : ''\n    });\n\n    useEffect( async ()=>{\n        try{\n            await Axios.get('http://localhost:3002/api/users/user',{withCredentials: true}).then(\n                (response) => {\n                    setMy(response.data);\n                }\n        )} catch(err){\n            console.log(err.response.data)\n            alert(\"로그인 필요\")\n            ///alert 누르면 로그인 창으로 돌아가기....\n        }\n    },[]) // ID 불러옴\n\n    const handlelogout = async () => {\n        await props.removeCookie();\n        props.history.push(\"/\")\n    }\n\n    return (\n        <section className = \"Usercontainer\">\n            <div className = \"Usertitle\">\n                <h1>내 정보</h1>\n                <div className = \"Userlogout\">                        \n                    <Button \n                        onClick = {() => handlelogout()}\n                        variant=\"outlined\"\n                        color=\"primary\"\n                    ><h3 style ={{fontSize: \"17px\"}}>Logout</h3>\n                    </Button> \n                </div>\n            </div>\n            <div className = \"Userprofile\">\n                <h3>{my.user_id}</h3>\n                <p>\n                    <span>{my.user_name}</span> \n                </p>\n            </div>\n            \n        </section>\n    )\n}\n\nexport default withRouter(User);\n","/home/ubuntu/MadCamp_Week4/src/Join.js",["115","116","117"],"import React from 'react';\nimport { Link, Route, BrowserRouter as Router} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport \"./style/Join.css\"\n\nfunction Join(){\n\n    const [ userId, setUserId ] = useState('');\n    const [ userPw, setUserPw ] = useState('');\n    const [ userName, setUserName ] = useState('');\n    const [ isJoinSuccess, setJoinSuccess ] = useState(false);\n\n    const createUserApi = (user) => {\n        return Axios.post('http://192.249.18.133:3002/api/users/new',\n            user).then((response) => response.data);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await createUserApi({\n                user_id: userId,\n                user_pw: userPw,\n                user_name: userName\n            });\n            if (response.result === 'ok') {\n                setJoinSuccess(true);\n            }\n            if (response.error){\n                alert(response.error);\n            }\n        } catch (err) {\n            console.error('login error', err);\n            console.log(err.message.data); //err 메세지 구분 피룡....\n            alert('회원가입에 실패하였습니다. 잠시 후 다시 시도해주세요.')\n        }\n    };\n    \n\n    return(\n        <div>\n            {!isJoinSuccess && (\n                <>\n                    <h2>Join</h2>\n                    <form\n                        onSubmit={handleSubmit}\n                    >\n                        <input\n                            type=\"text\"\n                            name=\"user_id\"\n                            value={userId}\n                            onChange={e => setUserId(e.target.value)}\n                            placeholder=\"아이디\"\n                        />\n                        <input\n                            type=\"password\"\n                            name=\"user_pw\"\n                            value={userPw}\n                            onChange={e => setUserPw(e.target.value)}\n                            placeholder=\"비밀번호\"\n                        />\n                        <input\n                            type=\"text\"\n                            name=\"user_name\"\n                            value={userName}\n                            onChange={e => setUserName(e.target.value)}\n                            placeholder=\"이름\"\n                        />\n                        <button\n                            type=\"submit\"\n                        >\n                        제출\n                        </button>\n                    </form>\n                </>\n            )}\n            {isJoinSuccess && (\n                <div>\n                    <p>회원가입을 축하합니다!</p>\n                    <Link to=\"/login\">로그인</Link>\n                </div>\n            )}\n        </div>\n    )\n}\n\nexport default Join;","/home/ubuntu/MadCamp_Week4/src/FreeWrite.js",["118","119","120","121"],"import React from 'react';\nimport {Component} from 'react';\nimport {useState, useEffect} from 'react';\nimport './style/FreeWrite.css';\nimport Axios from 'axios';\nimport Alert from '@material-ui/lab/Alert'\nimport { AlertTitle } from '@material-ui/lab';\nimport { Checkbox } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\nimport Create from '@material-ui/icons/Create';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nfunction FreeWrite(){\n\n    const [Content, setContent] = useState({\n        title: '',\n        content: ''\n    })\n\n    const submitContent = async () => {\n        await Axios.post('http://localhost:3002/api/freeboard',{\n            title: Content.title,\n            content: Content.content,\n            anonymous: checked\n        },{withCredentials: true}).then(() => \n        alert('POST COMPLETE') //material ui로 바꿀 수 있음... collapse를 사용??\n        )\n        document.location.href = \"/Jilli/freebaord\"\n    }\n\n    // const getContent = () =>{\n    //     Axios.get('http://localhost:3002/api/freeboard').then((response)=>{\n    //         setViewContent(response.data);\n    //     })\n    // }\n\n    \n\n    const [viewContent, setViewContent] = useState([]);\n\n    const getValue = e => {\n        const {name, value} = e.target;\n        setContent({\n            ...Content, ////javascript ... 문법 이해 필요\n            [name]: value\n        })\n    };\n\n    const getContentValue = (e) => {\n        const data = e.target.value;\n        setContent({\n            ...Content,\n            content: data\n        })\n        console.log(Content);\n    }\n\n    useEffect(() => {\n        Axios.get('http://192.249.18.133:3002/api/freeboard').then((response)=>{\n            setViewContent(response.data);\n        })\n    },[viewContent]) // useEffect 인자로 state 보내주면 state 바뀔때마다 useEffect 실행....\n    \n    // const getData = ()=>{\n    //     fetch('http://localhost:3002/api')\n    //         .then((res) => res.json())\n    //         .then((res) => (res.greeting));\n    // };\n\n    // var apiResponse = {greeting: getData()}\n    \n    const [checked, setChecked] = useState(true);\n\n    const handleChange = (e) => {\n        setChecked(e.target.checked)\n    }\n\n    return(\n        <div className = \"FreeWritetotal\">\n        <><div class = \"FreeWritetitle-wrap\">\n            <h1>자유 게시판/글쓰기</h1>\n        </div>\n        <div className = \"FreeWritearticles-wrap\">\n            <form className=\"FreeWritewrite\">\n        \n            {/* <div className='movie-container'>\n                {viewContent.map(element => \n                    <div>\n                        <h2>{element.title}</h2>\n                        <div>\n                            {element.content}\n                        </div>\n                    </div>\n                )}\n            </div> */}\n        \n            <p>\n                <input className=\"title\" type='text' placeholder='제목' onChange = {getValue} name = 'title' />\n            </p>\n            <p>\n                <textarea  placeholder='내용' onChange = {getContentValue}></textarea>\n            </p>\n            <div className =\"FreeWriteclearBothOnly\"></div>\n            <FormControlLabel\n                className = \"anonym\"\n                label = \"익명\"\n                control = {<Checkbox\n                            color=\"primary\"\n                            checked = {checked}\n                            onChange = {handleChange}    \n                            />}\n                labelPlacement = \"start\"\n                \n            >\n            </FormControlLabel>\n            <IconButton \n                // className=\"submit-button\"\n                // onClick = {() => {\n                //     setViewContent(viewContent.concat({...Content}));\n                // }}\n                onClick = {submitContent}\n                variant=\"outlined\"\n                color=\"primary\"\n            ><Create></Create></IconButton>\n            <div className =\"FreeWriteclearBothOnly\"></div>\n            </form>\n        </div>\n    </>\n    </div>\n    );\n\n}\n\nexport default FreeWrite;","/home/ubuntu/MadCamp_Week4/src/FreeOne.js",["122","123","124","125","126","127","128","129","130","131"],"import React from 'react';\nimport {Component} from 'react';\nimport {useState, useEffect} from 'react';\nimport Axios from 'axios';\nimport Alert from '@material-ui/lab/Alert'\nimport { AlertTitle } from '@material-ui/lab';\nimport { Link, Route, BrowserRouter as Router, useParams} from 'react-router-dom';\nimport './style/FreeOne.css'\nimport { Checkbox } from '@material-ui/core';\n\nimport Create from '@material-ui/icons/Create';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nfunction FreeOne(){\n\n    var params = useParams();\n    const id = params.freeid;\n\n    const[ Delete, setDelete] = useState(false)\n\n    const[ User , setUser] = useState('')\n\n    // var board = {\n    //     title : '',\n    //     content : ''\n    // }\n\n\n    const [Content, setContent] = useState({\n        title: '',\n        content: '',\n        userid: '',\n        anonymous: false\n    })\n\n    const[Comment, setComment] = useState({\n        commentcontent: '',\n        anonymous: true,\n        userid: ''\n    })\n\n    useEffect( async ()=>{\n        try{\n            await Axios.get('http://localhost:3002/api/users/check',{withCredentials: true}).then(\n                (response) => {\n                    setUser(response.data.user_id);\n                    console.log(response.data.user_id);\n                }\n        )} catch(err){\n            console.log(err.response.data)\n        }\n    },[]) // ID 불러옴\n\n\n    const submitComment = async (e) => {\n        e.preventDefault()\n        if(Comment.commentcontent == \"\"){\n            alert('내용을 입력하세요')\n        } else {\n            try{\n                await Axios.put('http://localhost:3002/api/freeboard/'+ id,{\n                    commentcontent: Comment.commentcontent,\n                    anonymous: checked\n                },{withCredentials: true}).then(() => \n                {alert('POST COMPLETE'); //material ui로 바꿀 수 있음... collapse를 사용??\n                setComment({...Comment, commentcontent: ''})\n                })\n                console.log(Comment.commentcontent);\n            }catch(err){\n                console.log(err.response.data)\n                alert('로그인 필요')\n            }\n        }\n    }\n\n    // const getContent = () =>{\n    //     Axios.get('http://localhost:3002/api/freeboard').then((response)=>{\n    //         setViewContent(response.data);\n    //     })\n    // }\n\n    \n\n    const [viewComment, setviewComment] = useState([]);\n\n    const getValue = e => {\n        const commentcontent = e.target.value;\n        setComment({\n            commentcontent: commentcontent\n        })\n        console.log(Comment);\n    };\n\n    // const getContentValue = (e) => {\n    //     const data = e.target.value;\n    //     setContent({\n    //         ...Content,\n    //         content: data\n    //     })\n    //     console.log(Content);\n    // }\n\n    useEffect( async () => {\n        try{\n            await Axios.get('http://192.249.18.133:3002/api/freeboard/'+ id).then((response)=>{\n                setContent({\n                    title: response.data.title,\n                    content: response.data.content,\n                    userid: response.data.userid,\n                    anonymous: response.data.anonymous\n                });\n                setviewComment(response.data.comment);\n                // console.log(\"반복\")\n                // console.log(response.data.comment)\n        })} catch(err){\n            setDelete(true)\n        }\n    },[viewComment]); // useEffect 인자로 state 보내주면 state 바뀔때마다 useEffect 실행....\n\n    \n    // // const getData = ()=>{\n    // //     fetch('http://localhost:3002/api')\n    // //         .then((res) => res.json())\n    // //         .then((res) => (res.greeting));\n    // // };\n\n    // // var apiResponse = {greeting: getData()}\n\n    const [checked, setChecked] = useState(true);\n\n    const handleChange = (e) => {\n        setChecked(e.target.checked)\n    }\n\n    const makeDelete = async (commentid) => {\n        console.log(\"여기도 반복?\")\n        console.log(commentid)\n        try{\n            await Axios.delete('http://localhost:3002/api/freeboard/'+ id,{ data: {commentid : commentid} , withCredentials: true}).then( (res) => {\n                console.log(\"느려지나?\");\n                setviewComment(res.data.comment);\n            })\n        }\n        catch(err){\n            console.log(err.response.data);\n            // setviewComment(...viewComment);\n        }\n    }\n\n    const BoardDelete = async() => { \n        try{\n            await Axios.delete('http://localhost:3002/api/freeboard/delete/'+ id, {withCredentials: true}).then(\n                (res) =>{\n                    document.location.href = \"/Jilli\"\n                })\n        } catch(err){\n\n        }\n    }\n\n\n\n    return(\n        // <div className=\"Free\">\n        // <h1>Free Board</h1>\n        // <div className='movie-container'>\n        //     {viewContent.map(element => \n        //         <div>\n        //             <Link to = '/Jilli/freeboard/:freeid'>\n        //                 <button>\n        //                     <h2>{element.title}</h2>\n        //                     <div>\n        //                         {element.content}\n        //                     </div>\n        //                 </button>\n        //             </Link>\n        //         </div>\n        //     )}\n        // </div>\n        // {/* <div className='form-wrapper'>\n        //     <input className=\"title-input\" type='text' placeholder='제목' onChange = {getValue} name = 'title' />\n        //     <textarea className=\"text-area\" placeholder='내용' onChange = {getContentValue}></textarea>\n        // </div> */}\n        // <Link to='/Jilli/freeboardwrite'>\n        //     <button \n        //     className=\"submit-button\"\n        \n        //     // onClick = {() => {\n        //     //     setViewContent(viewContent.concat({...Content}));\n        //     // }}\n        //     // onClick = {submitContent}\n        //     >글쓰기</button>\n        // </Link>\n        // </div>\n        <div className = \"FreeOnearticle-container\">\n            <div className = \"FreeOnetitle-wrap\">\n                <h1>자유게시판</h1>\n            </div>\n            <div className = \"FreeOnearticles-wrap\">\n                {Delete && (\n                    <article className = \"dialog\">\n                        글이 존재하지 않습니다. \n                    </article>\n                )}\n                \n                {! Delete && \n                    (<article>\n                        <div className = \"article\">\n                            <div className = \"profile\">\n                                <h3 className = \"large\">{Content.anonymous ? (\"익명\"):(Content.userid)}</h3>\n                            </div>\n                            <div className = \"status\">\n                            {( User ===  Content.userid ) && (<div className = \"update\">수정</div>)}\n                            {( User === Content.userid ) && (<div className = \"delete\" onClick = {() => BoardDelete()} >삭제</div>)}\n                            </div>\n                            <hr></hr>\n                            <h2 className=\"large\">{Content.title}</h2>\n                            <p className=\"large\">{Content.content}</p>\n                            <hr></hr>\n                            <div className = \"comment\">\n                                {viewComment.map(element =>\n                                <article >\n                                    <div className = \"parent\">\n                                        <h3 className = \"medium\">{element.anonymous ? (\"익명\"):(element.userid)}</h3>\n                                        <div className = \"status\">\n                                            {( User === element.userid ) && (<div className = \"delete\" onClick = {() => makeDelete(element._id)} >삭제</div>)}\n                                        </div>\n                                        <hr></hr>\n                                        <p className = \"large\">{element.commentcontent}</p> \n                                        <hr></hr> \n                                    </div>\n                                </article>)}\n                                <form className = \"writecomment \" onSubmit = {submitComment}>\n                                    <input\n                                        value = {Comment.commentcontent}\n                                        type=\"text\"\n                                        className=\"text\"\n                                        placeholder=\"댓글을 입력하세요.\"\n                                        onChange = {getValue}\n                                    />\n                                    <div className = \"option\">\n                                        <FormControlLabel\n                                            className = \"anonym\"\n                                            label = \"익명\"\n                                            control = {<Checkbox\n                                                color=\"primary\"\n                                                checked = {checked}\n                                                onChange = {handleChange}    \n                                            />}\n                                            labelPlacement = \"start\"\n                                        >\n                                        </FormControlLabel>\n                                        <IconButton \n                                            type = \"submit\"\n                                            variant=\"outlined\"\n                                            color=\"primary\"\n                                        ><Create style ={{marginTop: \"-3px\"}}></Create></IconButton>\n                                    </div>\n                                </form>\n                            </div>  \n                        </div>\n                    </article>)\n                }\n            </div>    \n        </div> \n    );\n\n}\n\nexport default FreeOne;","/home/ubuntu/MadCamp_Week4/src/Free.js",["132","133","134","135","136","137","138","139"],"import React from 'react';\nimport {Component} from 'react';\nimport {useState, useEffect} from 'react';\nimport './style/Free.css'\nimport Axios from 'axios';\nimport Alert from '@material-ui/lab/Alert'\nimport { AlertTitle } from '@material-ui/lab';\nimport { NavLink ,Link, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/icons/BorderColor';\n\nfunction Free(){\n\n    const [Content, setContent] = useState({\n        _id: '',\n        userid: '',\n        title: '',\n        content: '',\n        anonymous: false\n    })\n\n    const submitContent = () => {\n        Axios.post('http://192.249.18.133:3002/api/freeboard',{\n            title: Content.title,\n            content: Content.content\n        }).then(() => \n        alert('POST COMPLETE') //material ui로 바꿀 수 있음... collapse를 사용??\n        )\n    }\n\n    // const getContent = () =>{\n    //     Axios.get('http://localhost:3002/api/freeboard').then((response)=>{\n    //         setViewContent(response.data);\n    //     })\n    // }\n\n    \n\n    const [viewContent, setViewContent] = useState([]);\n\n    const getValue = e => {\n        const {name, value} = e.target;\n        setContent({\n            ...Content, ////javascript ... 문법 이해 필요\n            [name]: value\n        })\n    };\n\n    const getContentValue = (e) => {\n        const data = e.target.value;\n        setContent({\n            ...Content,\n            content: data\n        })\n        console.log(Content);\n    }\n\n    useEffect(() => {\n        Axios.get('http://192.249.18.133:3002/api/freeboard').then((response)=>{\n            setViewContent(response.data.reverse());\n        })\n    },[viewContent]) // useEffect 인자로 state 보내주면 state 바뀔때마다 useEffect 실행....\n    \n    // const getData = ()=>{\n    //     fetch('http://localhost:3002/api')\n    //         .then((res) => res.json())\n    //         .then((res) => (res.greeting));\n    // };\n\n    // var apiResponse = {greeting: getData()}\n    \n    return(\n        <div className = \"Freetotal-container\">\n        <div className = \"Freetitle-wrap\">\n            <h1>자유 게시판</h1>\n        </div>\n        <div className=\"Freeboard-container\">\n            <div className = \"Freearticles\">\n                <div>\n                    <Link to='/Jilli/freeboard/write'>\n                        <Button \n                            className=\"submit-button\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<Icon />}\n            \n                            // onClick = {() => {\n                            //     setViewContent(viewContent.concat({...Content}));\n                            // }}\n                            // onClick = {submitContent}\n                            >글쓰기</Button>\n                    </Link>\n                </div>\n            {viewContent.map(element => \n                <NavLink to = {'/Jilli/freeboard/write/' + element._id}>\n                    <article>\n                        <div className = \"article\">\n                            <h2 className = \"medium\">{element.title}</h2>\n                            <p className = \"small\">\n                                {element.content}\n                            </p>\n                            <h3 className =\"small\">{element.anonymous ? (\"익명\"):(element.userid)}</h3>\n                            <hr></hr>\n                        </div>\n                    </article>\n                </NavLink>\n            )}\n            </div>\n        </div>\n        {/* <div className='form-wrapper'>\n            <input className=\"title-input\" type='text' placeholder='제목' onChange = {getValue} name = 'title' />\n            <textarea className=\"text-area\" placeholder='내용' onChange = {getContentValue}></textarea>\n        </div> */}\n        </div>\n    );\n\n}\n\n\nexport default Free;","/home/ubuntu/MadCamp_Week4/src/Co_buying/Co_buying.js",["140","141","142","143","144","145","146","147"],"import React, {useState, useEffect} from 'react';\nimport './Co_buying.css';\nimport { Link, Route, BrowserRouter as Router} from 'react-router-dom';\nimport Axios from 'axios';\n\nfunction Co_buying(params) {\n    const [buyContent, setBuyContent] = useState({\n        id: '',\n        name: '',\n        member: '',\n        info: ''\n    })\n\n    const [viewContent, setViewContent] = useState([])\n\n    const [showWrite, setShowWrite] = useState(0)\n\n    useEffect(() => {\n        Axios.get('http://192.249.18.168:8080/api/Jilli').then((response)=>{\n            // console.log(response.data._id)\n            setViewContent(response.data);\n        })\n    }, [viewContent])\n\n    const getName = e => {\n        const {_, value} = e.target;\n        setBuyContent({\n            ...buyContent,\n            name: value\n        })\n        console.log(buyContent);\n    }\n\n    const getMember = e => {\n        const {_, value} = e.target;\n        setBuyContent({\n            ...buyContent,\n            member: value\n        })\n        console.log(buyContent);\n    }\n\n    const getInfo = e => {\n        const {_, value} = e.target;\n        setBuyContent({\n            ...buyContent,\n            info: value\n        })\n        console.log(buyContent);\n    }\n\n    return(\n        <div className='body'>\n            <div className='Co_buying_wrap'>\n                <h1>Co-Buying</h1>\n            </div>\n            <div className='writeButton' onClick={() => setShowWrite(1)}>새 글 작성하기</div>\n\n            {showWrite === 0 ? null : \n                <div className='showWrite'>\n                    \n                    {/* <div className='form-wrapper'> */}\n                        <input className=\"small-input\" type='text' placeholder='제목' onChange={getName} />\n                        <input className=\"small-input_\" type='text' placeholder='인원' onChange={getMember} />\n                        \n                        <textarea className='big-input' type='text' placeholder='내용' onChange={getInfo} />\n                    {/* </div> */}\n                    \n                    <button className='close-button' onClick={() => setShowWrite(0)}>닫기</button>\n                    <button className=\"submit-button\" onClick={()=>{\n\n                        if (buyContent.name == '') {alert('제목을 입력하시오'); return }\n                        if (buyContent.member == '') {alert('인원을 입력하시오'); return }\n                        if (buyContent.info == '') {alert('내용을 입력하시오'); return }\n                        Axios.post('http://192.249.18.168:8080/api/cobuying', {\n                            dorm: 'Jilli',\n                            name: buyContent.name,\n                            member: buyContent.member,\n                            info: buyContent.info,\n                            reply: []\n                        }).then( function(response){\n                            buyContent.id = response.data._id\n                            console.log(buyContent.id)\n                            setViewContent(viewContent.concat({...buyContent}))\n                            setShowWrite(0)\n                            setBuyContent({id: '',\n                            name: '',\n                            member: '',\n                            info: ''})\n                        });\n                    }}>등록\n                    </button>\n                </div>\n            }\n\n\n            <div className='contents-container'>\n                {viewContent.map(element => \n                    <Link to ={'/Co_buying/'+element._id} style={{display: 'block'}}>\n                        <article>\n                            <div className='each-content'>\n                                <h3>{element.name}, {element.member}</h3>\n                                <p>{element.info}</p>\n                            </div>\n                        </article>\n                    </Link>)}\n                \n            </div>\n            {/* <div className='form-wrapper'>\n                <input className=\"small-input\" type='text' placeholder='제목' onChange={getName} />\n                <input className=\"small-input\" type='text' placeholder='인원' onChange={getMember} />\n                <textarea className=\"content\" type='text' placeholder='내용' onChange={getInfo} />\n            </div>\n            <button className=\"submit-button\" onClick={()=>{\n                \n                Axios.post('http://192.249.18.168:8080/api/cobuying', {\n                    dorm: 'Jilli',\n                    name: buyContent.name,\n                    member: buyContent.member,\n                    info: buyContent.info,\n                    reply: []\n                }).then( function(response){\n                    buyContent.id = response.data._id\n                    console.log(buyContent.id)\n                    setViewContent(viewContent.concat({...buyContent}));\n                });\n            }}>입력</button> */}\n        </div>\n    );\n}\n\nexport default Co_buying;","/home/ubuntu/MadCamp_Week4/src/Co_buying/EachBuying.js",["148","149","150"],"import React, {useEffect, useState} from 'react'\nimport {useParams} from 'react-router-dom'\nimport Axios from 'axios'\n\nfunction EachBuying() {\n\n    var body = useParams()\n    \n    const [replyContent, setReplyContent] = useState({\n        content:''\n    })\n\n    const [viewReplyContent, setViewReplyContent] = useState([])\n\n    const [viewContent, setViewContent] = useState([])\n\n    useEffect(() => {\n        Axios.get('http://192.249.18.168:8080/api/cobuying/'+body.id).then((response)=>{\n            setViewContent(response.data)\n        })\n    }, [viewContent])\n\n    useEffect(() => {\n        Axios.get('http://192.249.18.168:8080/api/cobuying/'+body.id).then((response)=>{\n            setViewReplyContent(response.data[0].reply)\n        })\n    }, [])\n\n    const writeReply = e => {\n        const {_, value} = e.target;\n        setReplyContent({\n            ...replyContent,\n            content: value\n        })\n    }\n\n    const postReply = () => {\n        setViewReplyContent(viewReplyContent.concat(replyContent.content))\n        console.log(replyContent.content)\n        Axios.get('http://192.249.18.168:8080/api/cobuying/'+body.id).then((response) => {\n            var list  = response.data[0].reply.concat(replyContent.content)\n            Axios.put('http://192.249.18.168:8080/api/cobuying/'+body.id, list).then((response)=>{\n                console.log(\"put okay\")\n            })\n        })\n        \n        setReplyContent({\n            ...replyContent,\n            content: ''\n        })\n    }\n\n    return(\n        <div>\n            {viewContent.map(element => \n            <div className='each-content'>\n                <h3>{element.name}, {element.member}</h3>\n                <p>{element.info}</p>\n            </div>\n            )}\n            \n            {viewReplyContent.map(element => \n                <div>{element}</div>)}\n\n            <div>\n                <input input className=\"title-input\" type='text' placeholder='댓글' value={replyContent.content} onChange = {writeReply}/>\n                <button onClick = {postReply}>등록</button>\n            </div>\n        </div>\n    )\n}\n\nexport default EachBuying","/home/ubuntu/MadCamp_Week4/src/Jillimain.js",["151","152","153","154","155","156","157","158","159"],"import Co_buying from './Co_buying/Co_buying'\nimport EachBuying from './Co_buying/EachBuying'\nimport Jilli from './Jilli'\nimport React from 'react';\nimport './style/App.css';\nimport Free from './Free';\nimport FreeWrite from './FreeWrite';\nimport FreeOne from './FreeOne';\nimport Jillimenu from './Jillimenu';\nimport BoardFloor from './BoardFloor';\nimport { withCookies, useCookies } from 'react-cookie';\nimport {useState, useEffect} from 'react';\nimport { Link, Route, BrowserRouter as Router , Redirect, Switch} from 'react-router-dom'\n\nfunction Jillimain(props) {\n\n//   const [ cookies, removeCookie ] = useCookies(['user']);\n//   const [ hasCookie, setHasCookie ] = useState(false);\n\n//   useEffect(() => {\n//     if (cookies.user && cookies.user !== 'undefined') {\n//     setHasCookie(true);\n//     }\n//   }, [ cookies ]);\n\n  return (\n    <>\n      {/* <Route exact path='/Co_buying'><Co_buying/></Route>\n      <Route path='/Co_buying/:id'><EachBuying/></Route> */}\n      {/* <Route exact path='/Somang'><Jilli/></Route>\n      <Route exact path = '/'><Main cookies = {cookies} hasCookie = {hasCookie} setHasCookie = {setHasCookie} removeCookie = {() => {removeCookie('user'); setHasCookie(false);}}/></Route>\n      <Route path='/Sarang'><Sarang/></Route> */}\n      <Route path = '/Jilli'><Jillimenu cookies = {props.cookies} hasCookie = {props.hasCookie} setHasCookie = {props.setHasCookie} removeCookie = {() => {props.removeCookie('user'); props.setHasCookie(false);}}></Jillimenu></Route>\n      <Route exact path = '/Jilli/board'><Jilli/></Route>\n\n      <Route exact path = '/Jilli/board/floor/:floor'><BoardFloor/></Route>\n\n      <Route exact path = '/Jilli/Co-buying'><Co_buying/></Route>\n      <Route exact path = '/Jilli/freeboard'><Free/></Route>\n      <Route exact path = '/Jilli/freeboard/write'>{props.hasCookie?(<FreeWrite></FreeWrite>):(<Redirect to ={{pathname : \"/Login\"}}/>)}</Route>\n      <Route exact path = '/Jilli/freeboard/write/:freeid'><FreeOne></FreeOne></Route>\n      {/* <Route exact path = '/Login'><Login setHasCookie = {setHasCookie}></Login></Route>\n      <Route exact path = '/Join'><Join></Join></Route> */}\n    </>\n  )\n}\n\nexport default Jillimain;\n","/home/ubuntu/MadCamp_Week4/src/Jilli.js",["160","161","162","163","164","165","166","167","168","169","170","171"],"import React, {useEffect, useState} from 'react'\nimport './Jilli.css'\nimport { Link, NavLink, Route, BrowserRouter as Router  } from 'react-router-dom';\nimport Axios from 'axios';\nimport JilliBoard from './JilliBoard'\n\nfunction Jilli(params) {\n\n    const [clkColor, setClkColor] = useState([{color: '#8d8d8d'}, {color: '#8d8d8d'}, {color: '#8d8d8d'}, {color: '#8d8d8d'}])\n    const [floorNum, setFloorNum] = useState('1F')\n    return(\n        <div className='body'>\n            <div className='room'>\n                <table>\n                    <tr>\n                        <td style={{fontSize: '24px'}}> {floorNum} </td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td rowSpan='3' className='hall'>HALL</td>\n                        <td><NavLink to ={'/Jilli/board/'+'116'}><div>116</div></NavLink></td>\n                        <td><NavLink to ={'/Jilli/board/'+'118'}><div>118</div></NavLink></td>\n                        <td><NavLink to ={'/Jilli/board/'+'120'}><div>120</div></NavLink></td>\n                        <td><NavLink to ={'/Jilli/board/'+'122'}><div>122</div></NavLink></td>\n                        <td><Link to ='/Jilli/124'><div>124</div></Link></td>\n                        <td><Link to ='/Jilli/126'><div>126</div></Link></td>\n                        <td><Link to ='/Jilli/128'><div>128</div></Link></td>\n                    </tr>\n                    <tr>\n                        <td><Link to ='/Jilli/101'><div>101</div></Link></td>\n                        <td><Link to ='/Jilli/103'><div>103</div></Link></td>\n                        <td><Link to ='/Jilli/105'><div>105</div></Link></td>\n                        <td><Link to ='/Jilli/107'><div>107</div></Link></td>\n                        <td><Link to ='/Jilli/109'><div>109</div></Link></td>\n                        <td><Link to ='/Jilli/111'><div>111</div></Link></td>\n                        <td><Link to ='/Jilli/113'><div>113</div></Link></td>\n                        <td><Link to ='/Jilli/115'><div>115</div></Link></td>\n                        <td><Link to ='/Jilli/117'><div>117</div></Link></td>\n                        <td><Link to ='/Jilli/119'><div>119</div></Link></td>\n                        <td><Link to ='/Jilli/121'><div>121</div></Link></td>\n                        <td><Link to ='/Jilli/123'><div>123</div></Link></td>\n                        <td><Link to ='/Jilli/125'><div>125</div></Link></td>\n                        <td><Link to ='/Jilli/127'><div>127</div></Link></td>\n                    </tr>\n                    <tr>\n                        <td><Link to ='/Jilli/102'><div>102</div></Link></td>\n                        <td><Link to ='/Jilli/104'><div>104</div></Link></td>\n                        <td><Link to ='/Jilli/106'><div>106</div></Link></td>\n                        <td><Link to ='/Jilli/108'><div>108</div></Link></td>\n                        <td><Link to ='/Jilli/110'><div>110</div></Link></td>\n                        <td><Link to ='/Jilli/112'><div>112</div></Link></td>\n                        <td><Link to ='/Jilli/114'><div>114</div></Link></td>\n                    </tr>\n                </table>\n            </div>\n            <div className='floor'>\n                <Link to ='/Jilli/board'><div className='eachFloor'>1F</div></Link>\n                <Link to ='/Jilli/board/floor/2'><div className='eachFloor'>2F</div></Link>\n                <Link to ='/Jilli/board/floor/3'><div className='eachFloor'>3F</div></Link>\n                <Link to ='/Jilli/board/floor/4'><div className='eachFloor'>4F</div></Link>\n                <Link to ='/Jilli/board/floor/5'><div className='eachFloor'>5F</div></Link>\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Jilli","/home/ubuntu/MadCamp_Week4/src/JilliBoard.js",["172","173","174","175","176","177","178","179","180","181","182","183"],"import React, { useEffect, useState } from 'react'\nimport Axios from 'axios';\nimport { useParams, Link } from 'react-router-dom'\nimport './Jilli.css'\n\nfunction JilliBoard(params) {\n\n    const roomNum = useParams().roomNum\n\n    const [postReplyContent, setPostReplyContent] = useState({\n        roomNum: '',\n        text: ''\n    })\n\n    const [replyContent, setReplyContent] = useState([])\n\n    const [switchContent, setSwitchContent] = useState({\n        switch: 'roomReply'\n    })\n\n    const [colorContent, setColorContent] = useState([\n        {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}\n    ])\n\n    const [showButton, setShowButton] = useState({\n        show: true\n    })\n\n    const [deleteButton, setDeleteButton] = useState({\n        show: true\n    })\n\n    useEffect(()=>{\n        Axios.get('http://192.249.18.168:8080/api/Jilli/'+roomNum).then((response)=>{\n            setReplyContent(response.data)\n        })\n    }, [replyContent])\n\n    useEffect(() => {\n        setSwitchContent({switch: 'roomReply'})\n        setColorContent([{color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}])\n    }, roomNum)\n\n    const setColor = (num) => () => {\n        if (showButton.show == true ){\n            var list = [...colorContent]\n            list[num] = {color: '#3f51b5'}\n            setColorContent(list)\n        }\n    }\n\n    const [isitClick, setIsItClick] = useState(0)\n\n    const toggleColor = (num) => () => {\n        if (colorContent[num].color == '#FFFFFF') {\n            setColor(num)();\n        }\n        else {\n            var list = [...colorContent]\n            list[num] = {color: '#FFFFFF'}\n            setColorContent(list)\n\n        }\n    }\n\n    const toggleColor_ = (num) => () => {\n        if (showButton.show == true){\n            if (isitClick === 1){\n                if (colorContent[num].color == '#FFFFFF') {\n                    setColor(num)();\n                }\n                else {\n                    var list = [...colorContent]\n                    list[num] = {color: '#FFFFFF'}\n                    setColorContent(list)\n\n                }\n            }\n        }\n    }\n\n    const toggleColor__ = (num) => () => {\n        if (showButton.show == true){\n            setIsItClick(1)\n            toggleColor(num)()\n        }\n    }\n\n    const postReply = () => {\n        Axios.post('http://192.249.18.168:8080/api/Jilli/'+roomNum, {\n            roomNum: roomNum,\n            text: postReplyContent.text\n        }).then(function (response) {\n            console.log(\"response\")\n            Axios.get('http://192.249.18.168:8080/api/Jilli/'+roomNum).then((response)=>{\n            setReplyContent(response.data)\n            setPostReplyContent({\n                ...postReplyContent,\n                text: ''\n            })\n        })\n        })\n    }\n\n    const postRchange = () => {\n        var list = []\n        var index = 0\n        colorContent.map(element => {\n            if (element.color === '#d39ebb') {list.push(index)}\n            index ++\n        })\n\n        Axios.post('http://192.249.18.168:8080/api/Jilli/rchange/'+roomNum, {\n            roomNum: roomNum,\n            select: colorContent\n        }).then(function (response) {\n            console.log(\"response rchange\")\n            setShowButton({show: false})\n            // setColorContent([{color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}])\n        })\n    }\n\n    const roomChange = ()=> {\n        setSwitchContent({switch: 'roomChange'})\n        Axios.get('http://192.249.18.168:8080/api/Jilli/rchange/'+roomNum).then((response) =>{\n            console.log(response.data.length)\n            if (response.data.length != 0) { \n                setColorContent(response.data[response.data.length-1].select)\n                setShowButton({show: false})}\n            else{\n                setShowButton({show: true})\n            }      \n        })\n    }\n\n    const delRchange = () => {\n        Axios.delete('http://192.249.18.168:8080/api/Jilli/rchange/'+roomNum)\n            .then((response) => {\n                setShowButton({show: true})\n                setColorContent([{color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}, {color: '#FFFFFF'}])\n            })\n\n    }\n\n    return(\n        <div className='body' onMouseUp={()=>setIsItClick(0)}>\n            <div className='roomMemo' >\n                <ul className='roomNavi'>\n                    <li onClick={ ()=> setSwitchContent({ ...switchContent, switch: 'roomReply'})}> 방명록 </li>\n                    <li onClick={roomChange}> 입퇴사 기간</li> \n                </ul>\n\n                {switchContent.switch === 'roomReply' ? \n                <div>   \n                    <div className='roomTitle'> {roomNum}호 방명록 </div>\n                    {replyContent.map(element =>\n                    <div className='guestBkReply'><div>{element.text}</div></div>)}\n                    <div className='input_button'>\n                        <input value={postReplyContent.text} onChange={e => {\n                            const {_, value} = e.target\n                            setPostReplyContent({\n                                ...postReplyContent,\n                                text: value\n                            })\n                        }}></input>\n                        <button className='guestBkReplyBut'onClick={postReply}>입력</button>\n                    </div>\n                </div> : \n                \n                <div>\n                    <div className='timeLines'>\n                        <div className='timeLine'>08시</div>\n                        <div className='timeLine'>10시</div>\n                        <div className='timeLine'>12시</div>\n                        <div className='timeLine'>14시</div>\n                        <div className='timeLine'>16시</div>\n                        <div className='timeLine'>18시</div>\n                        <div className='timeLine'>20시</div>\n                        <div className='timeLine'>22시</div>\n                        <div className='timeLine'>24시</div>\n                    </div>\n                    <div className='timeTable'>\n                        <div className='timeBlock_' onMouseDown={toggleColor__(0)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(0)} style={{background: colorContent[0].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(1)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(1)} style={{background: colorContent[1].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(2)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(2)} style={{background: colorContent[2].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(3)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(3)} style={{background: colorContent[3].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(4)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(4)} style={{background: colorContent[4].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(5)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(5)} style={{background: colorContent[5].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(6)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(6)} style={{background: colorContent[6].color}}></div>\n                        <div className='timeBlock'  onMouseDown={toggleColor__(7)} onMouseUp={()=>setIsItClick(0)} onMouseOver={toggleColor_(7)} style={{background: colorContent[7].color}}></div>\n                        <div className='timeBlock'/>\n                    </div>\n\n                    {showButton.show === true ? <button className='timePostButton' onClick={postRchange}>등록</button> : null}\n\n                    {deleteButton.show === true ? <button className='timeDelButton' onClick={delRchange}>삭제</button> : null}\n                    \n                </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default JilliBoard","/home/ubuntu/MadCamp_Week4/src/Jillimenu.js",["184","185","186","187","188","189","190","191"],"import React from 'react';\nimport { withCookies, useCookies } from 'react-cookie';\nimport {useState, useEffect} from 'react';\nimport { Link, Route, BrowserRouter as Router , Redirect, Switch, NavLink} from 'react-router-dom'\nimport './style/Jillimenu.css'\nimport 'semantic-ui-css/semantic.min.css';\nimport Button from '@material-ui/core/Button'\nimport Icon from '@material-ui/icons/Person';\n\nfunction Jillimenu(props) {\n\n//   const [ cookies, removeCookie ] = useCookies(['user']);\n//   const [ hasCookie, setHasCookie ] = useState(false);\n\n//   useEffect(() => {\n//     if (cookies.user && cookies.user !== 'undefined') {\n//     setHasCookie(true);\n//     }\n//   }, [ cookies ]);\n\n  return (\n    <nav>\n        <div className = \"Jillimenuwrap\">\n            {!props.hasCookie && (\n                <div class = \"Jillimenuaccount\">\n                    <Link to = '/Login'>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            startIcon={<Icon />}    \n                        ><h3 style ={{fontSize: \"17px\", marginTop : \"0px\"}}>Login</h3>\n                        </Button>\n                    </Link>    \n                </div>\n                )}\n                {props.hasCookie && (\n                <div class = \"Jillimenuaccount\" >\n                        <Link to = '/User'>\n                            <Button\n                                className = \"my\" \n                                variant=\"outlined\"\n                                color=\"primary\"\n                                style ={{width: \"33px\"}}\n                                startIcon={<Icon style ={{marginLeft: \"-4.5px\"}}></Icon>} \n                            ></Button>\n                        </Link> \n                        <Button \n                            onClick = {props.removeCookie}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        ><h3 style ={{fontSize: \"17px\"}}>Logout</h3></Button>  \n                </div>\n                )}\n            <ul className = \"Jillimenumenu\">\n                <li>\n                    <NavLink exact path to =\"/\" className =\"JillimenuNavlink\">메인</NavLink>\n                </li>\n                <li>\n                    <NavLink path to =\"/Jilli/board\" className =\"JillimenuNavlink\">진리관 게시판</NavLink>\n                </li>\n                <li>\n                    <NavLink path to =\"/Jilli/freeboard\" className =\"JillimenuNavlink\" >진리관 자유 게시판</NavLink>\n                </li>\n                <li>\n                    <NavLink exact path to =\"/Jilli/Co-buying\" className =\"JillimenuNavlink\">공동 구매</NavLink>\n                </li>    \n            </ul> \n        </div>\n    </nav>\n  )\n}\n\nexport default Jillimenu;\n","/home/ubuntu/MadCamp_Week4/src/BoardFloor.js",[],{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","severity":1,"message":"197","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":12},{"ruleId":"196","severity":1,"message":"200","line":9,"column":8,"nodeType":"198","messageId":"199","endLine":9,"endColumn":17},{"ruleId":"196","severity":1,"message":"201","line":10,"column":8,"nodeType":"198","messageId":"199","endLine":10,"endColumn":15},{"ruleId":"196","severity":1,"message":"202","line":18,"column":10,"nodeType":"198","messageId":"199","endLine":18,"endColumn":14},{"ruleId":"196","severity":1,"message":"203","line":18,"column":49,"nodeType":"198","messageId":"199","endLine":18,"endColumn":57},{"ruleId":"196","severity":1,"message":"204","line":18,"column":59,"nodeType":"198","messageId":"199","endLine":18,"endColumn":65},{"ruleId":"196","severity":1,"message":"205","line":18,"column":67,"nodeType":"198","messageId":"199","endLine":18,"endColumn":77},{"ruleId":"206","severity":1,"message":"207","line":34,"column":38,"nodeType":"208","endLine":34,"endColumn":50},{"ruleId":"196","severity":1,"message":"209","line":3,"column":16,"nodeType":"198","messageId":"199","endLine":3,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":3,"column":40,"nodeType":"198","messageId":"199","endLine":3,"endColumn":46},{"ruleId":"211","severity":1,"message":"212","line":14,"column":10,"nodeType":"213","endLine":14,"endColumn":27,"suggestions":"214"},{"ruleId":"196","severity":1,"message":"209","line":2,"column":16,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":2,"column":40,"nodeType":"198","messageId":"199","endLine":2,"endColumn":46},{"ruleId":"196","severity":1,"message":"215","line":3,"column":19,"nodeType":"198","messageId":"199","endLine":3,"endColumn":28},{"ruleId":"216","severity":1,"message":"217","line":33,"column":32,"nodeType":"218","messageId":"219","endLine":33,"endColumn":34},{"ruleId":"196","severity":1,"message":"220","line":3,"column":10,"nodeType":"198","messageId":"199","endLine":3,"endColumn":21},{"ruleId":"196","severity":1,"message":"221","line":3,"column":23,"nodeType":"198","messageId":"199","endLine":3,"endColumn":33},{"ruleId":"196","severity":1,"message":"202","line":5,"column":10,"nodeType":"198","messageId":"199","endLine":5,"endColumn":14},{"ruleId":"196","severity":1,"message":"209","line":5,"column":16,"nodeType":"198","messageId":"199","endLine":5,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":5,"column":40,"nodeType":"198","messageId":"199","endLine":5,"endColumn":46},{"ruleId":"196","severity":1,"message":"203","line":5,"column":49,"nodeType":"198","messageId":"199","endLine":5,"endColumn":57},{"ruleId":"196","severity":1,"message":"204","line":5,"column":59,"nodeType":"198","messageId":"199","endLine":5,"endColumn":65},{"ruleId":"196","severity":1,"message":"222","line":8,"column":8,"nodeType":"198","messageId":"199","endLine":8,"endColumn":12},{"ruleId":"211","severity":1,"message":"223","line":17,"column":16,"nodeType":"224","endLine":28,"endColumn":6},{"ruleId":"196","severity":1,"message":"209","line":2,"column":16,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":2,"column":40,"nodeType":"198","messageId":"199","endLine":2,"endColumn":46},{"ruleId":"196","severity":1,"message":"215","line":3,"column":19,"nodeType":"198","messageId":"199","endLine":3,"endColumn":28},{"ruleId":"196","severity":1,"message":"225","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"226","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":13},{"ruleId":"196","severity":1,"message":"227","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":20},{"ruleId":"196","severity":1,"message":"228","line":9,"column":10,"nodeType":"198","messageId":"199","endLine":9,"endColumn":16},{"ruleId":"196","severity":1,"message":"225","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"226","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":13},{"ruleId":"196","severity":1,"message":"227","line":6,"column":10,"nodeType":"198","messageId":"199","endLine":6,"endColumn":20},{"ruleId":"196","severity":1,"message":"202","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":14},{"ruleId":"196","severity":1,"message":"209","line":7,"column":16,"nodeType":"198","messageId":"199","endLine":7,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":7,"column":40,"nodeType":"198","messageId":"199","endLine":7,"endColumn":46},{"ruleId":"211","severity":1,"message":"223","line":43,"column":16,"nodeType":"224","endLine":53,"endColumn":6},{"ruleId":"216","severity":1,"message":"217","line":58,"column":35,"nodeType":"218","messageId":"219","endLine":58,"endColumn":37},{"ruleId":"211","severity":1,"message":"223","line":104,"column":16,"nodeType":"224","endLine":119,"endColumn":6},{"ruleId":"211","severity":1,"message":"229","line":119,"column":7,"nodeType":"213","endLine":119,"endColumn":20,"suggestions":"230"},{"ruleId":"196","severity":1,"message":"225","line":2,"column":9,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"226","line":6,"column":8,"nodeType":"198","messageId":"199","endLine":6,"endColumn":13},{"ruleId":"196","severity":1,"message":"227","line":7,"column":10,"nodeType":"198","messageId":"199","endLine":7,"endColumn":20},{"ruleId":"196","severity":1,"message":"209","line":8,"column":25,"nodeType":"198","messageId":"199","endLine":8,"endColumn":30},{"ruleId":"196","severity":1,"message":"210","line":8,"column":49,"nodeType":"198","messageId":"199","endLine":8,"endColumn":55},{"ruleId":"196","severity":1,"message":"231","line":22,"column":11,"nodeType":"198","messageId":"199","endLine":22,"endColumn":24},{"ruleId":"196","severity":1,"message":"232","line":41,"column":11,"nodeType":"198","messageId":"199","endLine":41,"endColumn":19},{"ruleId":"196","severity":1,"message":"233","line":49,"column":11,"nodeType":"198","messageId":"199","endLine":49,"endColumn":26},{"ruleId":"196","severity":1,"message":"209","line":3,"column":16,"nodeType":"198","messageId":"199","endLine":3,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":3,"column":40,"nodeType":"198","messageId":"199","endLine":3,"endColumn":46},{"ruleId":"196","severity":1,"message":"234","line":26,"column":16,"nodeType":"198","messageId":"199","endLine":26,"endColumn":17},{"ruleId":"196","severity":1,"message":"234","line":35,"column":16,"nodeType":"198","messageId":"199","endLine":35,"endColumn":17},{"ruleId":"196","severity":1,"message":"234","line":44,"column":16,"nodeType":"198","messageId":"199","endLine":44,"endColumn":17},{"ruleId":"216","severity":1,"message":"217","line":72,"column":45,"nodeType":"218","messageId":"219","endLine":72,"endColumn":47},{"ruleId":"216","severity":1,"message":"217","line":73,"column":47,"nodeType":"218","messageId":"219","endLine":73,"endColumn":49},{"ruleId":"216","severity":1,"message":"217","line":74,"column":45,"nodeType":"218","messageId":"219","endLine":74,"endColumn":47},{"ruleId":"211","severity":1,"message":"235","line":21,"column":8,"nodeType":"213","endLine":21,"endColumn":21,"suggestions":"236"},{"ruleId":"211","severity":1,"message":"235","line":27,"column":8,"nodeType":"213","endLine":27,"endColumn":10,"suggestions":"237"},{"ruleId":"196","severity":1,"message":"234","line":30,"column":16,"nodeType":"198","messageId":"199","endLine":30,"endColumn":17},{"ruleId":"196","severity":1,"message":"238","line":2,"column":8,"nodeType":"198","messageId":"199","endLine":2,"endColumn":18},{"ruleId":"196","severity":1,"message":"220","line":11,"column":10,"nodeType":"198","messageId":"199","endLine":11,"endColumn":21},{"ruleId":"196","severity":1,"message":"221","line":11,"column":23,"nodeType":"198","messageId":"199","endLine":11,"endColumn":33},{"ruleId":"196","severity":1,"message":"239","line":12,"column":9,"nodeType":"198","messageId":"199","endLine":12,"endColumn":17},{"ruleId":"196","severity":1,"message":"215","line":12,"column":19,"nodeType":"198","messageId":"199","endLine":12,"endColumn":28},{"ruleId":"196","severity":1,"message":"202","line":13,"column":10,"nodeType":"198","messageId":"199","endLine":13,"endColumn":14},{"ruleId":"196","severity":1,"message":"210","line":13,"column":40,"nodeType":"198","messageId":"199","endLine":13,"endColumn":46},{"ruleId":"196","severity":1,"message":"204","line":13,"column":59,"nodeType":"198","messageId":"199","endLine":13,"endColumn":65},{"ruleId":"206","severity":1,"message":"207","line":38,"column":46,"nodeType":"208","endLine":38,"endColumn":58},{"ruleId":"196","severity":1,"message":"215","line":1,"column":16,"nodeType":"198","messageId":"199","endLine":1,"endColumn":25},{"ruleId":"196","severity":1,"message":"209","line":3,"column":25,"nodeType":"198","messageId":"199","endLine":3,"endColumn":30},{"ruleId":"196","severity":1,"message":"210","line":3,"column":49,"nodeType":"198","messageId":"199","endLine":3,"endColumn":55},{"ruleId":"196","severity":1,"message":"240","line":4,"column":8,"nodeType":"198","messageId":"199","endLine":4,"endColumn":13},{"ruleId":"196","severity":1,"message":"241","line":5,"column":8,"nodeType":"198","messageId":"199","endLine":5,"endColumn":18},{"ruleId":"196","severity":1,"message":"242","line":9,"column":12,"nodeType":"198","messageId":"199","endLine":9,"endColumn":20},{"ruleId":"196","severity":1,"message":"243","line":9,"column":22,"nodeType":"198","messageId":"199","endLine":9,"endColumn":33},{"ruleId":"196","severity":1,"message":"244","line":10,"column":22,"nodeType":"198","messageId":"199","endLine":10,"endColumn":33},{"ruleId":"245","severity":1,"message":"246","line":24,"column":58,"nodeType":"218","messageId":"247","endLine":24,"endColumn":59},{"ruleId":"245","severity":1,"message":"246","line":25,"column":58,"nodeType":"218","messageId":"247","endLine":25,"endColumn":59},{"ruleId":"245","severity":1,"message":"246","line":26,"column":58,"nodeType":"218","messageId":"247","endLine":26,"endColumn":59},{"ruleId":"245","severity":1,"message":"246","line":27,"column":58,"nodeType":"218","messageId":"247","endLine":27,"endColumn":59},{"ruleId":"196","severity":1,"message":"202","line":3,"column":21,"nodeType":"198","messageId":"199","endLine":3,"endColumn":25},{"ruleId":"196","severity":1,"message":"248","line":29,"column":26,"nodeType":"198","messageId":"199","endLine":29,"endColumn":41},{"ruleId":"211","severity":1,"message":"249","line":37,"column":8,"nodeType":"213","endLine":37,"endColumn":22,"suggestions":"250"},{"ruleId":"211","severity":1,"message":"251","line":42,"column":8,"nodeType":"198","endLine":42,"endColumn":15},{"ruleId":"216","severity":1,"message":"217","line":45,"column":29,"nodeType":"218","messageId":"219","endLine":45,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":55,"column":37,"nodeType":"218","messageId":"219","endLine":55,"endColumn":39},{"ruleId":"216","severity":1,"message":"217","line":67,"column":29,"nodeType":"218","messageId":"219","endLine":67,"endColumn":31},{"ruleId":"216","severity":1,"message":"217","line":69,"column":45,"nodeType":"218","messageId":"219","endLine":69,"endColumn":47},{"ruleId":"216","severity":1,"message":"217","line":83,"column":29,"nodeType":"218","messageId":"219","endLine":83,"endColumn":31},{"ruleId":"252","severity":1,"message":"253","line":108,"column":34,"nodeType":"224","messageId":"254","endLine":108,"endColumn":36},{"ruleId":"216","severity":1,"message":"255","line":127,"column":38,"nodeType":"218","messageId":"219","endLine":127,"endColumn":40},{"ruleId":"196","severity":1,"message":"234","line":160,"column":36,"nodeType":"198","messageId":"199","endLine":160,"endColumn":37},{"ruleId":"196","severity":1,"message":"220","line":2,"column":10,"nodeType":"198","messageId":"199","endLine":2,"endColumn":21},{"ruleId":"196","severity":1,"message":"221","line":2,"column":23,"nodeType":"198","messageId":"199","endLine":2,"endColumn":33},{"ruleId":"196","severity":1,"message":"239","line":3,"column":9,"nodeType":"198","messageId":"199","endLine":3,"endColumn":17},{"ruleId":"196","severity":1,"message":"215","line":3,"column":19,"nodeType":"198","messageId":"199","endLine":3,"endColumn":28},{"ruleId":"196","severity":1,"message":"209","line":4,"column":16,"nodeType":"198","messageId":"199","endLine":4,"endColumn":21},{"ruleId":"196","severity":1,"message":"210","line":4,"column":40,"nodeType":"198","messageId":"199","endLine":4,"endColumn":46},{"ruleId":"196","severity":1,"message":"203","line":4,"column":49,"nodeType":"198","messageId":"199","endLine":4,"endColumn":57},{"ruleId":"196","severity":1,"message":"204","line":4,"column":59,"nodeType":"198","messageId":"199","endLine":4,"endColumn":65},"no-native-reassign",["256"],"no-negated-in-lhs",["257"],"no-unused-vars","'Free' is defined but never used.","Identifier","unusedVar","'FreeWrite' is defined but never used.","'FreeOne' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'withRouter' is defined but never used.","react/jsx-pascal-case","Imported JSX component Co_buying must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Route' is defined but never used.","'Router' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["258"],"'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'withCookies' is defined but never used.","'useCookies' is defined but never used.","'Icon' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'Component' is defined but never used.","'Alert' is defined but never used.","'AlertTitle' is defined but never used.","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["259"],"'submitContent' is assigned a value but never used.","'getValue' is assigned a value but never used.","'getContentValue' is assigned a value but never used.","'_' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'body.id'. Either include it or remove the dependency array.",["260"],["261"],"'EachBuying' is defined but never used.","'useState' is defined but never used.","'Axios' is defined but never used.","'JilliBoard' is defined but never used.","'clkColor' is assigned a value but never used.","'setClkColor' is assigned a value but never used.","'setFloorNum' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'setDeleteButton' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'roomNum'. Either include it or remove the dependency array.",["262"],"React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","expectedInside","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"263","fix":"264"},{"desc":"265","fix":"266"},{"desc":"267","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},"Update the dependencies array to be: [props, props.cookies]",{"range":"273","text":"274"},"Update the dependencies array to be: [id, viewComment]",{"range":"275","text":"276"},"Update the dependencies array to be: [body.id, viewContent]",{"range":"277","text":"278"},"Update the dependencies array to be: [body.id]",{"range":"279","text":"280"},"Update the dependencies array to be: [replyContent, roomNum]",{"range":"281","text":"282"},[468,485],"[props, props.cookies]",[3472,3485],"[id, viewComment]",[551,564],"[body.id, viewContent]",[752,754],"[body.id]",[1040,1054],"[replyContent, roomNum]"]